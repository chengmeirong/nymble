// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "nymble_complaint.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>
namespace Nymble { namespace Marshal { void protobuf_BuildDesc_nymble_5fticket_2eproto(); } }

namespace Nymble {
namespace Marshal {

namespace {

const ::google::protobuf::Descriptor* Complaint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Complaint_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_nymble_5fcomplaint_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  ::Nymble::Marshal::protobuf_BuildDesc_nymble_5fticket_2eproto();
  const ::google::protobuf::FileDescriptor* file = pool->InternalBuildGeneratedFile(
    "\n\026nymble_complaint.proto\022\016Nymble.Marshal"
    "\032\023nymble_ticket.proto\"H\n\tComplaint\022\023\n\013ti"
    "me_period\030\001 \002(\005\022&\n\006ticket\030\002 \002(\0132\026.Nymble"
    ".Marshal.Ticket", 135);
  Complaint_descriptor_ = file->message_type(0);
  Complaint_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Complaint_descriptor_,
      &Complaint::default_instance(),
      Complaint::_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complaint, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complaint, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Complaint_descriptor_, &Complaint::default_instance());
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nymble_5fcomplaint_2eproto {
  StaticDescriptorInitializer_nymble_5fcomplaint_2eproto() {
    protobuf_BuildDesc_nymble_5fcomplaint_2eproto();
  }
} static_descriptor_initializer_nymble_5fcomplaint_2eproto_;


// ===================================================================

const Complaint Complaint::default_instance_;



const int Complaint::_offsets_[2] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complaint, time_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Complaint, ticket_),
};

Complaint::Complaint()
  : _cached_size_(0),
    time_period_(0),
    ticket_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (this == &default_instance_) {
    ticket_ = const_cast< ::Nymble::Marshal::Ticket*>(&::Nymble::Marshal::Ticket::default_instance());
  }
}

Complaint::Complaint(const Complaint& from)
  : _cached_size_(0),
    time_period_(0),
    ticket_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

Complaint::~Complaint() {
  if (this != &default_instance_) {
    delete ticket_;
  }
}

const ::google::protobuf::Descriptor* Complaint::descriptor() {
  if (Complaint_descriptor_ == NULL) protobuf_BuildDesc_nymble_5fcomplaint_2eproto();
  return Complaint_descriptor_;
}

Complaint* Complaint::New() const {
  return new Complaint;
}

const ::google::protobuf::Descriptor* Complaint::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* Complaint::GetReflection() const {
  if (Complaint_reflection_ == NULL) protobuf_BuildDesc_nymble_5fcomplaint_2eproto();
  return Complaint_reflection_;
}

}  // namespace Marshal
}  // namespace Nymble
